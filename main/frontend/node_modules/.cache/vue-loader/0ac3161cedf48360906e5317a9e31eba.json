{"remainingRequest":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\src\\views\\Login.vue","mtime":1564209688284},{"path":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564208051459},{"path":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1564208046278},{"path":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564208051459},{"path":"C:\\Users\\Equus\\Desktop\\folder\\HTH\\main\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1564208098866}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {mapState, mapActions} from \"vuex\"\r\nimport axios from \"axios\"\r\n// const axios = require('axios');\r\nexport default {\r\n    data() {\r\n        return{\r\n        email: null,\r\n        password: null\r\n        }\r\n        \r\n    },\r\n    computed: {\r\n        ...mapState([\"isLogin\", \"isLoginError\"])\r\n    },\r\n    methods: {\r\n        ...mapActions([\"login\"]),\r\n        test(){\r\n\r\n            // Make a request for a user with a given ID\r\n            axios\r\n            .get('https://reqres.in/api/users?page=2')\r\n            .then(res => {\r\n                // handle success\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                // handle error\r\n                console.log(err);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n\r\n            // Optionally the request above could also be done as\r\n            axios.get('/user', {\r\n                params: {\r\n                ID: 12345\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .then(() => {\r\n                // always executed\r\n            });  \r\n\r\n            // Want to use async/await? Add the `async` keyword to your outer function/method.\r\n            async function getUser() {\r\n            try {\r\n                const response = await axios.get('/user?ID=12345');\r\n                console.log(res);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n            }\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<v-container fill-height style=\"max-width=450px;\">\r\n <v-layout align-center row wrap>\r\n     <v-flex xs12>\r\n         <v-alert class=\"mb-3\"\r\n     :value=\"isLoginError\" type=\"error\">\r\n     아이디와 비밀번호를 확인해주세요.\r\n         </v-alert>\r\n         <v-alert\r\n         class=\"mb-3\"\r\n     :value=\"isLogin\" type=\"success\"\r\n     > 로그인이 완료되었습니다. \r\n     </v-alert>\r\n     <v-card>\r\n         <v-toolbar flat>\r\n             <v-toolbar-title>로그인</v-toolbar-title>\r\n         </v-toolbar>\r\n         <div class=\"pa-3\">\r\n             <v-text-field v-model=\"email\" label=\"이메일을 입력하세요\"></v-text-field>\r\n             <v-text-field v-model=\"password\" type=\"password\" label=\"패스워드를 입력하세요\"></v-text-field>\r\n             <v-btn color=\"primary\" depressed block large @click=\"login({email, password})\">로그인</v-btn>\r\n             <v-btn @click=\"test\">테스트</v-btn>\r\n         </div>\r\n     </v-card>\r\n     </v-flex>\r\n </v-layout>\r\n</v-container>\r\n</template>\r\n\r\n<script>\r\nimport {mapState, mapActions} from \"vuex\"\r\nimport axios from \"axios\"\r\n// const axios = require('axios');\r\nexport default {\r\n    data() {\r\n        return{\r\n        email: null,\r\n        password: null\r\n        }\r\n        \r\n    },\r\n    computed: {\r\n        ...mapState([\"isLogin\", \"isLoginError\"])\r\n    },\r\n    methods: {\r\n        ...mapActions([\"login\"]),\r\n        test(){\r\n\r\n            // Make a request for a user with a given ID\r\n            axios\r\n            .get('https://reqres.in/api/users?page=2')\r\n            .then(res => {\r\n                // handle success\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                // handle error\r\n                console.log(err);\r\n            })\r\n            .finally(function () {\r\n                // always executed\r\n            });\r\n\r\n            // Optionally the request above could also be done as\r\n            axios.get('/user', {\r\n                params: {\r\n                ID: 12345\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .then(() => {\r\n                // always executed\r\n            });  \r\n\r\n            // Want to use async/await? Add the `async` keyword to your outer function/method.\r\n            async function getUser() {\r\n            try {\r\n                const response = await axios.get('/user?ID=12345');\r\n                console.log(res);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>"]}]}